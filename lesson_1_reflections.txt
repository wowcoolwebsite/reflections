How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed all lines that were different between the two files.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If I make a typo it can be a lot more easy to find back with the FC command in windows.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    One of the pros is that you will have less and maybe more meaningful versions to compare.
    A contra could be that you don't save frequently enough and so can't track the progress and differences too much.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In programming often several, different files work together and interact wich each other so the program or website works, saving all files in one commit thus makes sense.
    In google docs (excels, word documents etc): each file is just a seperate file and doesn't work together with other files, saving multiple files in one commit wouldn't make sense.

How can you use the commands git log and git diff to view the history of files?

    Git log is useful to see all the commits (same file(s) but all the different versions), with the user made comment you can see which change exactly happened.
    Then you use the commit references to compare the files, the command for this is "git diff".

How might using version control make you more confident to make changes that
could break something?

    You always have a back-up, so if something goes terribly wrong you don't have to worry that much.
    This way you can be a little bit more "adventurous" and experimental while coding!

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for web development. For now I'm still learning and not really working in a team. 
    Still Git seems just as useful to use on your own.